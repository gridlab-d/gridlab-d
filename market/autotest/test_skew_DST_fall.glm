// This is a test of whether schedules are
// skewed correctly during daylight savings
// in the fall

#set tmp=../test_skew_DST_fall
#setenv GRIDLABD=../../../core

module market;
module tape;
module assert;

clock {
	timezone PST+8PDT;
	starttime '2000-11-06 12:00:00';
	stoptime '2000-11-07 12:00:00';
}

schedule fixed_prices {
	* 0 * * * 0.5;
	* 1 * * * 1.5;
	* 2 * * * 2;
	* 3 * * * 3;
	* 4 * * * 4;
	* 5 * * * 5;
	* 6 * * * 6;
	* 7 * * * 7;
	* 8 * * * 8;
	* 9 * * * 9;
	* 10 * * * 10;
	* 11 * * * 11;
	* 12 * * * 12;
	* 13 * * * 13;
	* 14 * * * 14;
	* 15 * * * 15;
	* 16 * * * 16;
	* 17 * * * 17;
	* 18 * * * 18;
	* 19 * * * 19;
	* 20 * * * 20;
	* 21 * * * 21;
	* 22 * * * 22;
	* 23 * * * 23;
}

schedule skewed_prices {
	* 0 * * * 23;
	* 1 * * * 0.5;
	* 2 * * * 1.5;
	* 3 * * * 2;
	* 4 * * * 3;
	* 5 * * * 4;
	* 6 * * * 5;
	* 7 * * * 6;
	* 8 * * * 7;
	* 9 * * * 8;
	* 10 * * * 9;
	* 11 * * * 10;
	* 12 * * * 11;
	* 13 * * * 12;
	* 14 * * * 13;
	* 15 * * * 14;
	* 16 * * * 15;
	* 17 * * * 16;
	* 18 * * * 17;
	* 19 * * * 18;
	* 20 * * * 19;
	* 21 * * * 20;
	* 22 * * * 21;
	* 23 * * * 22;
}

object auction {
	name Market_1;
	unit kW;
	period 1h;
	verbose TRUE;
	special_mode SELLERS_ONLY;
	schedule_skew 3600;
	fixed_price fixed_prices*1;
	warmup 0;
	init_price 0.5;
	init_stdev 0;
	object recorder {
		property fixed_price;
		file "test_skew_DST_fall_output.csv";
		interval 1h;
		limit 48;
	};
	object double_assert {
		value skewed_prices*1;
		target fixed_price;
		within 1e-3;
	};
}
	