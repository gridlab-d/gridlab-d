// Design a market to examine unbalanced bidding. Create a test with unequal buyers and sellers, 
// such as one seller and three buyers and vice versa. Ensure the market still clears to a reasonable value. 

#set tmp=../test_market_auction_clearing_6_moresellers
#setenv GRIDLABD=../../../core

module tape;
module market;
module assert;

clock {
	timezone PST+8PDT;
	starttime '2001-01-01 00:00:00';
	stoptime '2001-01-03 00:00:00';
}

schedule buyer_price {
	* 0-23 * * * 40;
}

schedule seller_1_price {
	* 0-5 * * * 10;
	* 6-8 * * * 30;
	* 9-17 * * * 30;
	* 18-21 * * * 40;
	* 22-23 * * * 90;
}

schedule seller_2_price {
	* 0-5 * * * 20;
	* 6-8 * * * 40;
	* 9-17 * * * 20;
	* 18-21 * * * 30;
	* 22-23 * * * 80;
}

schedule seller_3_price {
	* 0-5 * * * 40;
	* 6-8 * * * 60;
	* 9-17 * * * 40;
	* 18-21 * * * 50;
	* 22-23 * * * 100;
}

schedule buyer_quantity {
	* 0-5 * * * 1;
	* 6-8 * * * 4;
	* 9-17 * * * 3;
	* 18-21 * * * 10;
	* 22-23 * * * 3;
}

schedule seller_quantity {
	* 0-5 * * * 4;
	* 6-8 * * * 2;
	* 9-17 * * * 2;
	* 18-21 * * * 15;
	* 22-23 * * * 3;
}

schedule assert_clearing_quantity{
	* 1-6 * * * 1;
	* 7-9 * * * 4;
	* 10-18 * * * 3;
	* 19-22 * * * 10;
	* 23-0 * * * 0;
}

schedule assert_clearing_price{
	* 1-6 * * * 10;
	* 7-9 * * * 40;
	* 10-18 * * * 30;
	* 19-22 * * * 30;
	* 23-0 * * * 60;
}

object auction {
	name Market_1;

	unit MWh;
	period 3600;
	verbose TRUE;
	special_mode NONE;
	warmup 0;
	object recorder {
		property current_market.clearing_price,current_market.clearing_quantity;
		file "test_auction_6_sellers.csv";
		interval 3600;
		limit 168;
	};
	
		object double_assert{
		target "current_market.clearing_price";
		in '2001-01-02 01:00:00';
		value assert_clearing_price*1;
		out '2001-01-03 00:00:00';
		status ASSERT_TRUE;
		within 0.0001; // asserting clearing price
	};
	
	object double_assert{
		target "current_market.clearing_quantity";
		in '2001-01-02 01:00:00';
		value assert_clearing_quantity*1;
		out '2001-01-03 00:00:00';
		status ASSERT_TRUE;
		within 0.0001; // asserting clearing quantity
	};
}

object stub_bidder {
	name buyer_1;
	role BUYER;
	bid_period 3600;
	market Market_1;
	price buyer_price*1;
	quantity buyer_quantity*1;
	count 10000;
}

// object stub_bidder {
	// name buyer_2;
	// role BUYER;
	// bid_period 3600;
	// market Market_1;
	// price buyer_price*3;
	// quantity buyer_quantity*1;
	// count 10000;
// }

// object stub_bidder {
	// name buyer_3;
	// role BUYER;
	// bid_period 3600;
	// market Market_1;
	// price buyer_price*5;
	// quantity buyer_quantity*1;
	// count 10000;
// }

object stub_bidder {
	name seller_1;
	role SELLER;
	bid_period 3600;
	market Market_1;
	price seller_1_price*1;
	quantity seller_quantity*1;
	count 10000;
}

object stub_bidder {
	name seller_2;
	role SELLER;
	bid_period 3600;
	market Market_1;
	price seller_2_price*1;
	quantity seller_quantity*1;
	count 10000;
}

object stub_bidder {
	name seller_3;
	role SELLER;
	bid_period 3600;
	market Market_1;
	price seller_3_price*1;
	quantity seller_quantity*1;
	count 10000;
}
