//This file tests that the clearing prices are valid when
//one of the buyers re-bids during the bidding period 

//Bidding period: 3600 s
//Buyer1: bid: 45, quantity: 5, period: 3600 s
//Buyer2: bid: 42 then 28, quantity: 5, period: 1800 s
//Buyer3: bid: 23, quantity: 5, period: 3600 s
//Seller1: bid 35, quantity: 5, period: 3600 s
//Seller2: bid 56, quantity: 5, period: 3600 s
//Seller3: bid 62, quantity: 5, period: 3600 s

//Expected clearing price: 40
//Expected clearing quantity: 5

//The clearing price should be 42.0001 at first (case 5)
//but when buyer2 re-bids, it should change to 
//40 (case 3)

#set tmp=../test_markets_auction_buyer_rebid
#setenv GRIDLABD=../../../core

#define stylesheet=http://gridlab-d.svn.sourceforge.net/viewvc/gridlab-d/trunk/core/gridlabd-2_0

module market;
module tape;
module assert;

clock {
	timezone PST+8PDT;
	starttime '2001-01-01 00:00:00';
	stoptime '2001-01-03 00:00:00';
}

class auction {
    double current_price_mean_24h;
	double current_price_stdev_24h;
}

object auction {
	name Market_1;

	unit MWh;
	period 3600;
	verbose TRUE;
	special_mode NONE;
	warmup 0;
	init_price 40;
	init_stdev 1e-6;
	object multi_recorder {
		property current_market.clearing_price,current_market.clearing_quantity,current_price_mean_24h,current_price_stdev_24h,buyer1:price,buyer1:quantity,buyer2:price,buyer2:quantity,buyer3:price,buyer3:quantity,seller1:price,seller1:quantity,seller2:price,seller2:quantity,seller3:price,seller3:quantity;
		file "test_markets_auction_buyer_rebid_output.csv";
		interval 1800;
		limit 168;
	};
	object double_assert {
		in '2001-01-01 01:00:00';
		value 40;
		within 1e-4;
		target "current_market.clearing_price";
	};
	object double_assert {
		in '2001-01-01 01:00:00';
		value 5;
		within 1e-5;
		target "current_market.clearing_quantity";
	};
	
	object double_assert {
		value 40;
		within 1e-4;
		target "current_price_mean_24h";
	};
	object double_assert {
		value 0;
		within 1e-5;
		target "current_price_stdev_24h";
	};
	object enum_assert {
		in '2001-01-01 01:00:00';
		value 3;
		target "current_market.clearing_type";
	};
	object double_assert {
		value 0;
		target "current_market.marginal_quantity";
		within 1e-5;
	};
}

object stub_bidder {
	name buyer1;
	role BUYER;
	bid_period 3600;
	market Market_1;
	price 45;
	quantity 5;
	count 10000;
};

schedule buyer2_bids {
	0-29 * * * * 42;
	30-59 * * * * 28;
}

object stub_bidder {
	name buyer2;
	role BUYER;
	bid_period 1800;
	market Market_1;
	price buyer2_bids*1;
	quantity 5;
	count 10000;
}

object stub_bidder {
	name buyer3;
	role BUYER;
	bid_period 3600;
	market Market_1;
	price 23;
	quantity 5;
	count 10000;
}

object stub_bidder {
	name seller1;
	role SELLER;
	bid_period 3600;
	market Market_1;
	price 35;
	quantity 5;
	count 10000;
};

object stub_bidder {
	name seller2;
	role SELLER;
	bid_period 3600;
	market Market_1;
	price 56;
	quantity 5;
	count 10000;
}

object stub_bidder {
	name seller3;
	role SELLER;
	bid_period 3600;
	market Market_1;
	price 62;
	quantity 5;
	count 10000;
}

