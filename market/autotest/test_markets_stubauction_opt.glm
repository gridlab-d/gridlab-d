// test_markets_stubauction.glm contains validation for the calculation 
// of all rolling averages and standard deviations within the stubauction module
// d3y334


#set tmp=../test_markets_stubauction_opt
#setenv GRIDLABD=../../../core

module market;
module tape;
module assert;

clock {
	timezone PST+8PDT;
	starttime '2001-01-01 00:00:00';
	stoptime '2001-03-01 01:00:00';
}

schedule price_signal {
	* 0-3 * * * 10;
	* 4-7 * * * 20;
	* 8-11 * * * 30;
	* 12-15 * * * 40;
	* 16-19 * * * 50;
	* 20-23 * * * 60;
}

schedule last_P_check {
	* 1-4 * * * 10;
	* 5-8 * * * 20;
	* 9-12 * * * 30;
	* 13-16 * * * 40;
	* 17-20 * * * 50;
	* 21-0 * * * 60;
}

object stubauction {
	period 3600;
	next.P price_signal*1;
	object recorder {
		property next.P,last.P,avg24,std24,avg72,std72,avg168,std168;
		file "test_markets_stubauction.csv";
		interval 3600;
		limit 8760;
	};
	object double_assert {
		target next.P;
		status ASSERT_TRUE;
		value price_signal*1;
		within 0.1;
	};
	object double_assert {
		target last.P;
		in '2001-01-01 1:00:00';
		status ASSERT_TRUE;
		value last_P_check*1;
		within 0.1;
	};
	object double_assert {
		target avg24;
		in '2001-01-03 00:00:00';
		status ASSERT_TRUE;
		value 35;
		within 0.1;
	};
	object double_assert {
		target avg72;
		in '2001-01-05 00:00:00';
		status ASSERT_TRUE;
		value 35;
		within 0.1;
	};
	object double_assert {
		target avg168;
		in '2001-01-09 00:00:00';
		status ASSERT_TRUE;
		value 35;
		within 0.1;
	};
	object double_assert {
		target std168;
		in '2001-01-09 00:00:00';
		status ASSERT_TRUE;
		value 17.0783;
		within 0.0001;
	};
	object double_assert {
		target std72;
		in '2001-01-05 00:00:00';
		status ASSERT_TRUE;
		value 17.0783;
		within 0.0001;
	};
	object double_assert {
		target std24;
		in '2001-01-03 00:00:00';
		status ASSERT_TRUE;
		value 17.0783;
		within 0.0001;
	};
}