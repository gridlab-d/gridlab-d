//Simple feeder to test childed triplex nodes and to see if houses
//are populating/propagating properly
//Test is theoretically identical between FBS and NR
//Test the three triplex meters individually, because
//Add in some loads for FPI testing
//Also add three-phase section for SPCT check (odd configuration, but still tests it)
//Technically, the three-phase portion is wrong for FBS, but that's not really the purpose of this test.
//Tolerance loosened slightly to reflect this

clock {
	timezone EST+5EDT;
	starttime '2009-07-01 04:00:00';
	stoptime '2009-07-01 05:00:00';
}

#set minimum_timestep=60;
#set profiler=1;
#set complex_output_format=RECT

module tape;
module assert;
module residential {
	implicit_enduses NONE;
}

#define recorder_filename="data_triplex_parent_test_FBS"
module powerflow {
	solver_method FBS;
}

object triplex_line_conductor {     
	name triplex_4/0 AA;    
	resistance 0.48;     
	geometric_mean_radius 0.0158;     
}       

object triplex_line_configuration {     
	name triplex_line_configuration_1;     
	conductor_1 triplex_4/0 AA;    
	conductor_2 triplex_4/0 AA;    
	conductor_N triplex_4/0 AA;    
	insulation_thickness 0.08;     
	diameter 0.522;     
}         

//This part is technically implying the actual swing for FBS (despite markers).
object meter {
	phases CN;
	name three_phase_swing_intermed;
	nominal_voltage 7200.0;
	//Explicitly set the voltage to "compensate" for this
	voltage_C -3599.82+6235.36j;
	// object recorder {
		// property "voltage_A,voltage_B,voltage_C";
		// interval -1;
		// file ${recorder_filename}_test_new_meter_voltage.csv;
	// };
}

object transformer_configuration {
	name trip_xform_example;
	connect_type SINGLE_PHASE_CENTER_TAPPED;
	power_rating 6000;
	powerC_rating 6000;
	primary_voltage 7200.0;
	secondary_voltage 120.0;
	resistance 0.01;
	reactance 0.06;
}

object transformer {
	name triplex_transformer;
	phases CS;
	from three_phase_swing_intermed;
	to trip_swing;
	configuration trip_xform_example;
}

object transformer {
	name triplex_transformer_to_second;
	phases CS;
	from three_phase_swing_intermed;
	to trip_node_second;
	configuration trip_xform_example;
	// object recorder {
		// property "power_out";
		// interval -1;
		// file data_triplex_parent_test_secondxformer.csv;
	// };
	object complex_assert {
		target power_out;
		value +2242.13+1127.71j;
		within 0.5;
	};
}

object triplex_load {
	name trip_node_second;     
	phases CS;     
	nominal_voltage 120;
	groupid voltdumper;
	base_power_1 750.0 VA;
	base_power_2 775.0 VA;
	base_power_12 1000.0 VA;
	impedance_pf_1 0.85;
	impedance_pf_2 0.85;
	impedance_pf_12 0.85;
	power_pf_1 0.95;
	power_pf_2 0.95;
	power_pf_12 0.95;
	current_pf_1 0.87;
	current_pf_2 0.87;
	current_pf_12 0.87;
	power_fraction_1 0.35;
	impedance_fraction_1 0.5;
	current_fraction_1 0.15;
	power_fraction_2 0.35;
	impedance_fraction_2 0.5;
	current_fraction_2 0.15;
	power_fraction_12 0.35;
	impedance_fraction_12 0.5;
	current_fraction_12 0.15;
}

object triplex_load {
	name trip_swing;     
	phases CS;     
	bustype SWING;
	nominal_voltage 120;
	groupid voltdumper;
	base_power_1 750.0 VA;
	base_power_2 775.0 VA;
	base_power_12 1000.0 VA;
	impedance_pf_1 0.85;
	impedance_pf_2 0.85;
	impedance_pf_12 0.85;
	power_pf_1 0.95;
	power_pf_2 0.95;
	power_pf_12 0.95;
	current_pf_1 0.87;
	current_pf_2 0.87;
	current_pf_12 0.87;
	power_fraction_1 0.35;
	impedance_fraction_1 0.5;
	current_fraction_1 0.15;
	power_fraction_2 0.35;
	impedance_fraction_2 0.5;
	current_fraction_2 0.15;
	power_fraction_12 0.35;
	impedance_fraction_12 0.5;
	current_fraction_12 0.15;
		
	// object recorder {
		// property "measured_power";
		// interval -1;
		// file data_triplex_parent_test_swingbus.csv;
	// };
	object complex_assert {
		target measured_power;
		within 1.5;
		object player {
			property value;
			file ../data_triplex_parent_test_swingbus.csv;
		};
	};
}

object triplex_line {
	groupid Triplex_Line;
	phases CS;
	name trip_line_object;
	from trip_swing;
	to trip_parent_meter;
	length 10;
	configuration triplex_line_configuration_1;
}

object triplex_meter {
	name trip_parent_meter;
	phases CS;
	groupid voltdumper;
	nominal_voltage 120;
	// object recorder {
		// property "measured_power";
		// interval -1;
		// file data_triplex_parent_test_parentbus.csv;
	// };
	object complex_assert {
		target measured_power;
		within 1.5;
		object player {
			property value;
			file ../data_triplex_parent_test_parentbus.csv;
		};
	};
}

object triplex_load {
	name trip_child_load;     
	phases CS;     
	groupid voltdumper;
	parent trip_parent_meter;
	nominal_voltage 120;
	base_power_1 750.0 VA;
	base_power_2 775.0 VA;
	base_power_12 1000.0 VA;
	impedance_pf_1 0.85;
	impedance_pf_2 0.85;
	impedance_pf_12 0.85;
	power_pf_1 0.95;
	power_pf_2 0.95;
	power_pf_12 0.95;
	current_pf_1 0.87;
	current_pf_2 0.87;
	current_pf_12 0.87;
	power_fraction_1 0.35;
	impedance_fraction_1 0.5;
	current_fraction_1 0.15;
	power_fraction_2 0.35;
	impedance_fraction_2 0.5;
	current_fraction_2 0.15;
	power_fraction_12 0.35;
	impedance_fraction_12 0.5;
	current_fraction_12 0.15;
}


object triplex_meter {
	name house_meter;
	parent trip_parent_meter;
	phases CS;
	groupid voltdumper;
	nominal_voltage 120;
	// object recorder {
		// property "measured_power";
		// interval -1;
		// file data_triplex_parent_test_housebus.csv;
	// };
	object complex_assert {
		target measured_power;
		within 1.5;
		object player {
			property value;
			file ../data_triplex_parent_test_housebus.csv;
		};
	};
}

object house {
	name house_load_thinger;
	parent house_meter;
	schedule_skew -2658;
	floor_area 2227;
	number_of_stories 2;
	ceiling_height 10;
	over_sizing_factor 0.2;
	//Thermal integrity -> Single Family 1
	Rroof 13.92;
	Rwall 9.14;
	Rfloor 8.47;
	glazing_layers 1;
	glass_type 1;
	glazing_treatment 1;
	window_frame 1;
	Rdoors 3.37;
	airchange_per_hour 0.79;
	cooling_COP 2.7;
	air_temperature 68.87;
	mass_temperature 68.87;
	total_thermal_mass_per_floor_area 2.981;
	heating_system_type HEAT_PUMP;
	heating_COP 2.7;
	cooling_system_type ELECTRIC;
	auxiliary_strategy DEADBAND;
	auxiliary_system_type ELECTRIC;
	motor_model BASIC;
	motor_efficiency AVERAGE;
	breaker_amps 1000;
	hvac_breaker_rating 1000;
	cooling_setpoint 78.93;
	heating_setpoint 67.59;
	object ZIPload {
		name house2_resp_load;
		// Responsive load
		//schedule_skew -2658;
		base_power 1.5;
		heatgain_fraction 0.900;
		power_pf 0.9;
		current_pf -0.9;
		impedance_pf 0.8;
		impedance_fraction 0.200000;
		current_fraction 0.400000;
		power_fraction 0.400000;
	};
	object ZIPload {
		name house2_unresp_load;
		// Unresponsive load
		schedule_skew -2658;
		base_power 1.05;
		heatgain_fraction 0.900;
		power_pf 0.9;
		current_pf 0.8;
		impedance_pf -0.95;
		impedance_fraction 0.200000;
		current_fraction 0.400000;
		power_fraction 0.400000;
	};
	object waterheater {
		name house_2_wh;
		schedule_skew 3884;
		heating_element_capacity 5.5 kW;
		tank_setpoint 134.0;
		temperature 132;
		thermostat_deadband 5.8;
		location INSIDE;
		tank_UA 4.0;
		demand 1.01;
		tank_volume 20;
	};
}


// object recorder {
	// parent trip_line_object;
	// property "power_in,power_out";
	// interval -1;
	// file ${recorder_filename}_tripline.csv;
// }

// object group_recorder {
	// property "voltage_1";
	// group "groupid=voltdumper";
	// interval 120;
	// file ${recorder_filename}_test_voltage_1.csv;
// }

// object group_recorder {
	// property "voltage_2";
	// group "groupid=voltdumper";
	// interval 120;
	// file ${recorder_filename}_test_voltage_2.csv;
// }

// object group_recorder {
	// property "voltage_12";
	// group "groupid=voltdumper";
	// interval 120;
	// file ${recorder_filename}_test_voltage_12.csv;
// }

// object group_recorder {
	// group "class=triplex_load";
	// property "measured_power";
	// interval 120;
	// file ${recorder_filename}_swingbus_out.csv;
// }

// object group_recorder {
	// group "class=triplex_meter";
	// property "measured_power";
	// interval 120;
	// file ${recorder_filename}_triplex_meter_out.csv;
// }

// object group_recorder {
	// group "class=transformer";
	// property "power_out";
	// interval 120;
	// file ${recorder_filename}_transformer_power.csv;
// }
