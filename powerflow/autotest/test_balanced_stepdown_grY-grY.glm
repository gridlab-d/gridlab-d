// $id$
//	Copyright (C) 2008 Battelle Memorial Institute

// 4 Node Feeder: Balanced step-down grY-grY

/////////////////////////////////////////////
// BEGIN
/////////////////////////////////////////////

clock {
	timezone EST+5EDT;
	starttime '2000-01-01 0:00:00';
	stoptime '2000-01-01 0:00:01';
}

//#define stylesheet="C:\Users\Jason\Documents\GridLAB-D\trunk\VS2005\gridlabd-2_0";
#set relax_naming_rules=1
module powerflow;
module assert;
module tape;

object overhead_line_conductor:100 {
	geometric_mean_radius 0.0244;
	resistance 0.306;
}

object overhead_line_conductor:101 {
	geometric_mean_radius 0.00814;
	resistance 0.592;
}

object line_spacing:200 {
	distance_AB 2.5;
	distance_BC 4.5;
	distance_AC 7.0;
	distance_AN 5.656854;
	distance_BN 4.272002;
	distance_CN 5.0;
}

object line_configuration:300 {
	conductor_A overhead_line_conductor:100;
	conductor_B overhead_line_conductor:100;
	conductor_C overhead_line_conductor:100;
	conductor_N overhead_line_conductor:101;
	spacing line_spacing:200;
}

object transformer_configuration:400 {
	connect_type 1;
	power_rating 6000;
	powerA_rating 2000;
	powerB_rating 2000;
	powerC_rating 2000;
	primary_voltage 12470;
	secondary_voltage 4160;
	resistance 0.01;
	reactance 0.06;
}

object node {
	name node1;
	phases "ABCN";
	voltage_A +7199.558+0.000j;
	voltage_B -3599.779-6235.000j;
	voltage_C -3599.779+6235.000j;
	nominal_voltage 7199.558;
}

object overhead_line:12 {
	phases "ABCN";
	from node1;
	to node2;
	length 2000;
	configuration line_configuration:300;
	object recorder {
		file "line12.csv";
		interval 1;
		limit 1000;
		property current_out_A,current_out_B,current_out_C,current_in_A,current_in_B,current_in_C,phases,status,from,to,power_in,power_out,power_losses,flow_direction,length,configuration;
	};
	object complex_assert {
		target current_in_A;
		within 5;
		value 347.9-34.9d;
	};
	object complex_assert {
		target current_in_B;
		within 5;
		value 323.7-154.2d;
	};
	object complex_assert {
		target current_in_C;
		within 5;
		value 336.8+85.0d;
	};
}

object node {
	name node2;
	phases "ABCN";
	voltage_A +7199.558+0.000j;
	voltage_B -3599.779-6235.000j;
	voltage_C -3599.779+6235.000j;
	nominal_voltage 7199.558;
	object recorder {
		file "yybsd2.csv";
		interval 1;
		limit 1000;
		property voltage_A,voltage_B,voltage_C,voltage_AB,voltage_BC,voltage_CA,current_A,current_B,current_C,power_A,power_B,power_C,shunt_A,shunt_B,shunt_C;
	};
	object complex_assert {
		target voltage_A;
		within 5;
		value 7107-0.3d;
	};
	object complex_assert {
		target voltage_B;
		within 5;
		value 7140-120.3d;
	};
	object complex_assert {
		target voltage_C;
		within 5;
		value 7121+119.6d;
	};
}

object transformer:23 {
	phases "ABCN";
	from node2;
	to node3;
	configuration transformer_configuration:400;
}

object node {
	name node3;
	phases "ABCN";
	voltage_A +2401.777+0.000j;
	voltage_B -1200.889-2080.000j;
	voltage_C -1200.889+2080.000j;
	nominal_voltage 2401.777;
	object recorder {
		file "yybsd3.csv";
		interval 1;
		limit 1000;
		property voltage_A,voltage_B,voltage_C,voltage_AB,voltage_BC,voltage_CA,current_A,current_B,current_C,power_A,power_B,power_C,shunt_A,shunt_B,shunt_C;
	};
	object complex_assert {
		target voltage_A;
		within 5;
		value 2247.6-3.7d;
	};
	object complex_assert {
		target voltage_B;
		within 5;
		value 2269-123.5d;
	};
	object complex_assert {
		target voltage_C;
		within 5;
		value 2256+116.4d;
	};
}

object overhead_line:34 {
	phases "ABCN";
	from node3;
	to load4;
	length 2500;
	configuration line_configuration:300;
	object recorder {
		file "line34.csv";
		interval 1;
		limit 1000;
		property current_out_A,current_out_B,current_out_C,current_in_A,current_in_B,current_in_C,phases,status,from,to,power_in,power_out,power_losses,flow_direction,length,configuration;
	};
	object complex_assert {
		target current_in_A;
		within 5;
		value 1042.8-34.9d;
	};
	object complex_assert {
		target current_in_B;
		within 5;
		value 970.2-154.2d;
	};
	object complex_assert {
		target current_in_C;
		within 5;
		value 1009.6+85.0d;
	};
}

// node resets current to 0 at the end of every sync
// pubish new public variable in link.h; in postsync
// look @ both NR & FB -> focus on NR but FB should still work
// NR only solves well-conditioned systems; FB will solve any system
// go back to FB
// Kersting will include everything but center-tapped transformers
object load {
	name load4;
	phases "ABCN";
	voltage_A +2401.777+0.000j;
	voltage_B -1200.889-2080.000j;
	voltage_C -1200.889+2080.000j;
	constant_power_A +1800000.000+871779.789j;
	constant_power_B +1800000.000+871779.789j;
	constant_power_C +1800000.000+871779.789j;
	nominal_voltage 2401.777;
	object recorder {
		file "yybsd4.csv";
		interval 1;
		limit 1000;
		property voltage_A,voltage_B,voltage_C,voltage_AB,voltage_BC,voltage_CA,current_A,current_B,current_C,power_A,power_B,power_C,shunt_A,shunt_B,shunt_C;
	};
	object complex_assert {
		target voltage_A;
		within 5;
		value 1918-9.1d;
	};
	object complex_assert {
		target voltage_B;
		within 5;
		value 2061-128.3d;
	};
	object complex_assert {
		target voltage_C;
		within 5;
		value 1981+110.9d;
	};
}


///////////////////////////////
// END
///////////////////////////////
