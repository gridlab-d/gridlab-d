// $Id$
// Basic deltamode test
// parented devices test
// identical to test_deltamode_diesel_dg_assert.glm, but with parented meter on BUS_1
// and LOAD_1 parented to a meter
// Also tests unit conversion in modules
// Further variation to embed diesel down two child levels
// Swapped orders too to test deferred inits
// Fixed-point-iterative variant of test - assert tolerance widened to use same files (answers slightly different)

#set suppress_repeat_messages=0
//#set profiler=1
#set dateformat=US
#define rotor_convergence=0.0001
// #set verbose=1

//Overall GridLAB-D parameters
#set double_format=%+.12lg
#set complex_format=%+.12lg%+.12lg%c
#set complex_output_format=RECT

//Deltamode declarations - global values
#set deltamode_timestep=100000000		//100 ms
#set deltamode_maximumtime=60000000000	//1 minute
#set deltamode_iteration_limit=10		//Iteration limit

clock {
	timezone "PST+8PDT";
	starttime '2001-01-01 00:00:00 PST';
	stoptime '2001-01-01 00:00:38 PST';
}

module assert;
module tape;
module powerflow {
	enable_subsecond_models true;
	deltamode_timestep 10.0 ms;	//10 ms
	solver_method NR;
	NR_solver_algorithm FPI;
};
module generators {
	enable_subsecond_models TRUE;
	deltamode_timestep 10000.0 us;	//10 ms
}

object diesel_dg {
	parent BUS_1_p_p_p;
	name Gen_Bus_1;
	Rated_V 15000.0;
	flags DELTAMODE;
	Gen_type DYN_SYNCHRONOUS;
	Exciter_type SEXS;
	Governor_type DEGOV1;
	rotor_speed_convergence ${rotor_convergence};
	//temp properties - sync with example
	power_out_A 437500.0+287500.0j;
	power_out_B 375000.0+287500.0j;
	power_out_C 412500.0+287500.0j;
	Governor_type NO_GOV;
	Exciter_type SEXS;
	Governor_type DEGOV1;
	object recorder {
		property rotor_speed,rotor_angle,flux1d,flux2q,EpRotated,VintRotated,Eint_A,Eint_B,Eint_C,Irotated,pwr_electric,pwr_mech;
		flags DELTAMODE;
		//interval -1;
		interval 1;
		file "Gen_1_Speed.csv";
	};
	object double_assert {
		flags DELTAMODE;
		target rotor_speed;
		within 0.5;
		object player {
			flags DELTAMODE;
			property value;
			file ../data_G1SpeedAssert.csv;
		};
	};
}

//Reference line type
object line_configuration {
	name OHL_config;
	z11 0.3465+1.0179j;	//Ohms/mile
	z12 0.1560+0.5017j;
	z13 0.1580+0.4236j;
	z21 0.1560+0.5017j;
	z22 0.3375+1.0478j;
	z23 0.1535+0.3849j;
	z31 0.1580+0.4236j;
	z32 0.1535+0.3849j;
	z33 0.3414+1.0348j;
}

//Power system
object meter {
	phases ABC;
	name BUS_1;
	nominal_voltage 8660.254;
	flags DELTAMODE;
	object recorder {
		file bus_1_output_recorder.csv;
		property voltage_A,voltage_B,voltage_C,measured_power;
		flags DELTAMODE;
		//interval -1;
		interval 1;
	};
	object complex_assert {
		flags DELTAMODE;
		target voltage_A;
		within 1.0;
		operation FULL;
		object player {
			flags DELTAMODE;
			property value;
			file ../data_Bus1_voltageA.csv;
		};
    };
}

object meter {
	phases ABC;
	name BUS_1_p;
	parent BUS_1;
	nominal_voltage 8660.254;
	flags DELTAMODE;
	object recorder {
		file bus_1_p_output_recorder.csv;
		property voltage_A,voltage_B,voltage_C,measured_power;
		flags DELTAMODE;
		interval 1;
	};
}

object node {
	phases ABC;
	name BUS_1_p_p;
	parent BUS_1_p;
	nominal_voltage 8660.254;
	flags DELTAMODE;
}

object meter {
	phases ABC;
	name BUS_1_p_p_p;
	parent BUS_1_p_p;
	nominal_voltage 8660.254;
	flags DELTAMODE;
	object recorder {
		file bus_1_p_p_p_output_recorder.csv;
		property voltage_A,voltage_B,voltage_C,measured_power;
		flags DELTAMODE;
		interval 1;
	};
}

object meter {
	phases ABC;
	name BUS_2;
	nominal_voltage 8660.254;
	bustype SWING;
	flags DELTAMODE;
	object recorder {
		file bus_2_output_recorder.csv;
		property voltage_A,voltage_B,voltage_C,measured_power;
		flags DELTAMODE;
		interval 1;
	};
}

//Diesel 1 was here - moved higher for deferral reasons

object diesel_dg {
	parent BUS_2;
	name Gen_Bus_2;
	Rated_V 15000.0;
	flags DELTAMODE;
	Gen_type DYN_SYNCHRONOUS;
	rotor_speed_convergence ${rotor_convergence};
	//temp properties - sync with example
	power_out_A 437500.0+287500.0j;
	power_out_B 375000.0+287500.0j;
	power_out_C 412500.0+287500.0j;
	Exciter_type NO_EXC;
	Governor_type NO_GOV;
	object recorder {
		property rotor_speed,rotor_angle,flux1d,flux2q,EpRotated,VintRotated,Eint_A,Eint_B,Eint_C,Irotated,pwr_electric,pwr_mech;
		flags DELTAMODE;
		//interval -1;
		interval 1;
		file "Gen_2_Speed.csv";
	};
}

object meter {
	phases ABC;
	name LOAD_1;
	nominal_voltage 8660.254;
	flags DELTAMODE;
}

object load {
	phases ABC;
	name LOAD_1_p;
	parent LOAD_1;
	nominal_voltage 8660.254;
	constant_power_A 875000.0+575000.0j;
	constant_power_B 750000.0+575000.0j;
	constant_power_C 825000.0+575000.0j;
	flags DELTAMODE;
	object player {
		file ../diesel_deltamode_load_player_A.csv;
		property constant_power_A;
		flags DELTAMODE;
	};
	object player {
		file ../diesel_deltamode_load_player_B.csv;
		property constant_power_B;
		flags DELTAMODE;
	};
	object player {
		file ../diesel_deltamode_load_player_C.csv;
		property constant_power_C;
		flags DELTAMODE;
	};
	object recorder {
		file load_output_recorder.csv;
		property "voltage_A,voltage_B,voltage_C,measured_power";
		flags DELTAMODE;
		interval 1;
	};
}

//Create overhead lines
object overhead_line {
	phases ABC;
	name BUS_1_to_BUS_2;
	from BUS_1;
	to BUS_2;
	length 3500.0 ft;
	configuration OHL_config;
	object recorder {
		flags DELTAMODE;
		property "power_in,power_out";
		interval 1;
		file OHL_1_2.csv;
	};
}

object overhead_line {
	phases ABC;
	name BUS_1_to_LOAD_1;
	from BUS_1;
	to LOAD_1;
	length 1000.0 ft;
	configuration OHL_config;
	object recorder {
		flags DELTAMODE;
		property "power_in,power_out";
		interval 1;
		file OHL_1_L1.csv;
	};
}

object overhead_line {
	phases ABC;
	name BUS_2_to_LOAD_1;
	from BUS_2;
	to LOAD_1;
	length 2500.0 ft;
	configuration OHL_config;
}

object group_recorder {
	flags DELTAMODE;
	group "class=meter";
	property "measured_power";
	interval 1;
	file meter_gr.csv;
}